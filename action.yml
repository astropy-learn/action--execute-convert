# This workflow is called in the 'tutorial--*' repositories to execute each
# Jupyter notebook and convert the output to .html and .pdf.
name: 'Execute and convert notebook'

inputs:
  python-version:
    type: string
    required: true
  tutorial-slug:
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Enforce tutorial-slug input
      shell: bash
      run: |
        [[ "${{ inputs.tutorial-slug }}" ]] || { echo "inputs.tutorial-slug is empty" ; exit 1; }

    - name: Check out
      uses: actions/checkout@v4
      with:
        clean: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
      
    - name: Install notebook and build requirements
      shell: bash
      run: | 
        pip install -r requirements.txt
        pip install -r astropy-tutorials/requirements-dev.txt
        playwright install
        pre-commit install

    - name: Copy logo, print diagnostics
      shell: bash
      run: | 
        cp astropy-tutorials/images/logo.svg .
        echo "Populated config file (local): $(cat _config.yml)"
        echo "Generated table of contents file (only needed if building a book): $(cat _toc.yml)"
        echo "$(tree -L 3)"

    - name: Cache executed notebook(s)
      uses: actions/cache@v4
      with:
        path: _build/.jupyter_cache
        key: jupyter-book-cache-${{ hashFiles('requirements.txt') }}

    - name: Use Jupyterbook to execute notebook, convert to HTML, generate pdf
      shell: bash
      run: python astropy-tutorials/scripts/execute-convert.py ${{ inputs.tutorial-slug }}

    - name: Upload converted notebook as an artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html_build
        path: html

    - name: Push converted notebook files to 'converted' branch
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: JamesIves/github-pages-deploy-action@v4.6.4
      with:
        branch: converted
        folder: "html"
        single-commit: true
        clean: true
